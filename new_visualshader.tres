[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
default_input_values = [ 0, 1.0, 1, 0.0 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "texture"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "fill"

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeIf" id=7]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 1e-05, 3, Vector3( 0, 0, 0 ), 4, Vector3( 1, 1, 1 ), 5, Vector3( 0, 0, 0 ) ]

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Output:0

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 432, 35 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1060, 140 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( 400, 220 )
nodes/fragment/4/node = SubResource( 6 )
nodes/fragment/4/position = Vector2( -20, 120 )
nodes/fragment/5/node = SubResource( 7 )
nodes/fragment/5/position = Vector2( 660, 80 )
nodes/fragment/6/node = SubResource( 8 )
nodes/fragment/6/position = Vector2( 160, 140 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 420, 100 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 580, 380 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( 580, 300 )
nodes/fragment/connections = PoolIntArray( 2, 0, 5, 1, 6, 1, 5, 0 )
